# Configuration générique pour une base de données unique.
# Ce fichier configure Alembic pour gérer les migrations de schéma de la base de données.

[alembic]
# Chemin vers le répertoire où les scripts de migration sont stockés.
# Alembic générera les fichiers de migration dans ce répertoire.
script_location = alembic

# Modèle utilisé pour générer les fichiers de migration.
# Les fichiers de migration auront un nom basé sur ce modèle, incluant un identifiant de révision (%(rev)s) et un slug (%(slug)s).
file_template = %%(rev)s_%%(slug)s

# L'URL de connexion à la base de données SQLAlchemy utilisée par Alembic.
# Ici, nous utilisons une base de données SQLite située dans le répertoire courant.
sqlalchemy.url = sqlite:///./library.db

# Configuration des loggers
# "keys" définit les différents loggers que nous allons configurer.
[loggers]
keys = root,sqlalchemy,alembic

# Configuration des handlers
# Les handlers sont des mécanismes qui déterminent où les messages de log seront envoyés (par exemple, la console, un fichier, etc.).
[handlers]
keys = console

# Configuration des formatters
# Les formatters définissent le format des messages de log, c'est-à-dire comment les messages apparaîtront.
[formatters]
keys = generic

# Configuration du logger racine
# Le logger "root" est le logger principal.
[logger_root]
# Niveau de log WARN : seules les alertes de niveau WARNING ou plus seront affichées.
level = WARN
# Le logger utilise le handler "console" pour afficher les messages.
handlers = console

# Configuration du logger pour SQLAlchemy
[logger_sqlalchemy]
# Niveau de log WARN : seules les alertes de niveau WARNING ou plus seront affichées pour SQLAlchemy.
level = WARN
# Le logger utilise également le handler "console".
handlers = console
# "qualname" est utilisé pour filtrer les logs uniquement pour le module SQLAlchemy.
qualname = sqlalchemy.engine

# Configuration du logger pour Alembic
[logger_alembic]
# Niveau de log INFO : les messages de niveau INFO et plus seront affichés pour Alembic.
level = INFO
# Le logger utilise également le handler "console".
handlers = console
# "qualname" est utilisé pour filtrer les logs uniquement pour Alembic.
qualname = alembic

# Configuration du handler console
# Ce handler envoie les messages de log à la sortie standard (la console).
[handler_console]
# Utilisation de la classe "StreamHandler" pour diriger les logs vers la sortie standard.
class = StreamHandler
# "args" spécifie les arguments pour le handler, ici la sortie standard d'erreur (stderr).
args = (sys.stderr,)
# Le niveau de log est défini à NOTSET, ce qui signifie que ce handler n'appliquera pas de filtrage supplémentaire.
level = NOTSET
# Le handler utilisera le formatter générique défini ci-dessous.
formatter = generic

# Configuration du formatter générique
# Ce formatter définit comment les messages de log seront formatés.
[formatter_generic]
# Format des messages : inclut la date/heure, le niveau de log, le nom du logger et le message lui-même.
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s
